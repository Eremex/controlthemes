<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mxb="clr-namespace:Eremex.AvaloniaUI.Controls.Bars;assembly=Eremex.Avalonia.Controls"
                    xmlns:mxc="clr-namespace:Eremex.AvaloniaUI.Controls.Common;assembly=Eremex.Avalonia.Controls"
                    xmlns:localization="clr-namespace:Eremex.AvaloniaUI.Controls.Localization;assembly=Eremex.Avalonia.Controls"
                    xmlns:icons="clr-namespace:Eremex.AvaloniaUI.Icons;assembly=Eremex.Avalonia.Icons">

    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="20">
                <TextBox Text="Sample" FontSize="12" IsEnabled="true" Width="100" Classes="clearButton" TextAlignment="Left"/>
                <TextBox Text="Disabled" IsEnabled="false" Width="100"/>
                <TextBox Text="asdf" Watermark="Watermark" IsEnabled="true" Width="100"/>
                <Border Background="{DynamicResource Fill/Neutral/Secondary/Enabled}" Padding="10">
                    <StackPanel Spacing="20">
                        <TextBox Text="Sample" FontSize="12" IsEnabled="true" Width="100" Classes="clearButton secondary" TextAlignment="Left"/>
                        <TextBox Text="Disabled" IsEnabled="false" Classes="secondary" Width="100"/>
                        <TextBox Watermark="Watermark" Classes="secondary" IsEnabled="true" Width="100"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <Thickness x:Key="TextBoxTopHeaderMargin">0,0,0,4</Thickness>
    <StreamGeometry x:Key="TextBoxClearButtonData">M0.146447 0.146447C0.341709 -0.0488155 0.658291 -0.0488155 0.853553 0.146447L4 3.29289L7.14645 0.146447C7.34171 -0.0488155 7.65829 -0.0488155 7.85355 0.146447C8.04882 0.341709 8.04882 0.658291 7.85355 0.853553L4.70711 4L7.85355 7.14645C8.04882 7.34171 8.04882 7.65829 7.85355 7.85355C7.65829 8.04882 7.34171 8.04882 7.14645 7.85355L4 4.70711L0.853553 7.85355C0.658291 8.04882 0.341709 8.04882 0.146447 7.85355C-0.0488155 7.65829 -0.0488155 7.34171 0.146447 7.14645L3.29289 4L0.146447 0.853553C-0.0488155 0.658291 -0.0488155 0.341709 0.146447 0.146447Z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxRevealButtonData">m10.051 7.0032c2.215 0 4.0105 1.7901 4.0105 3.9984s-1.7956 3.9984-4.0105 3.9984c-2.215 0-4.0105-1.7901-4.0105-3.9984s1.7956-3.9984 4.0105-3.9984zm0 1.4994c-1.3844 0-2.5066 1.1188-2.5066 2.499s1.1222 2.499 2.5066 2.499 2.5066-1.1188 2.5066-2.499-1.1222-2.499-2.5066-2.499zm0-5.0026c4.6257 0 8.6188 3.1487 9.7267 7.5613 0.10085 0.40165-0.14399 0.80877-0.54686 0.90931-0.40288 0.10054-0.81122-0.14355-0.91208-0.54521-0.94136-3.7492-4.3361-6.4261-8.2678-6.4261-3.9334 0-7.3292 2.6792-8.2689 6.4306-0.10063 0.40171-0.50884 0.64603-0.91177 0.54571s-0.648-0.5073-0.54737-0.90901c1.106-4.4152 5.1003-7.5667 9.728-7.5667z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxHideButtonData">m0.21967 0.21965c-0.26627 0.26627-0.29047 0.68293-0.07262 0.97654l0.07262 0.08412 4.0346 4.0346c-1.922 1.3495-3.3585 3.365-3.9554 5.7495-0.10058 0.4018 0.14362 0.8091 0.54543 0.9097 0.40182 0.1005 0.80909-0.1436 0.90968-0.5455 0.52947-2.1151 1.8371-3.8891 3.5802-5.0341l1.8096 1.8098c-0.70751 0.7215-1.1438 1.71-1.1438 2.8003 0 2.2092 1.7909 4 4 4 1.0904 0 2.0788-0.4363 2.8004-1.1438l5.9193 5.9195c0.2929 0.2929 0.7677 0.2929 1.0606 0 0.2663-0.2662 0.2905-0.6829 0.0726-0.9765l-0.0726-0.0841-6.1135-6.1142 0.0012-0.0015-1.2001-1.1979-2.8699-2.8693 2e-3 -8e-4 -2.8812-2.8782 0.0012-0.0018-1.1333-1.1305-4.3064-4.3058c-0.29289-0.29289-0.76777-0.29289-1.0607 0zm7.9844 9.0458 3.5351 3.5351c-0.45 0.4358-1.0633 0.704-1.7392 0.704-1.3807 0-2.5-1.1193-2.5-2.5 0-0.6759 0.26824-1.2892 0.7041-1.7391zm1.7959-5.7655c-1.0003 0-1.9709 0.14807-2.8889 0.425l1.237 1.2362c0.5358-0.10587 1.0883-0.16119 1.6519-0.16119 3.9231 0 7.3099 2.6803 8.2471 6.4332 0.1004 0.4018 0.5075 0.6462 0.9094 0.5459 0.4019-0.1004 0.6463-0.5075 0.5459-0.9094-1.103-4.417-5.0869-7.5697-9.7024-7.5697zm0.1947 3.5093 3.8013 3.8007c-0.1018-2.0569-1.7488-3.7024-3.8013-3.8007z</StreamGeometry>

    <MenuFlyout x:Key="DefaultTextBoxContextFlyout" Placement="Bottom">
        <MenuItem x:Name="TextBoxContextFlyoutCutItem" Header="{x:Static localization:ControlsResources.ContextMenu_Cut}" Command="{Binding $parent[TextBox].Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}" InputGesture="{x:Static TextBox.CutGesture}" />
        <MenuItem x:Name="TextBoxContextFlyoutCopyItem" Header="{x:Static localization:ControlsResources.ContextMenu_Copy}" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}"/>
        <MenuItem x:Name="TextBoxContextFlyoutPasteItem" Header="{x:Static localization:ControlsResources.ContextMenu_Paste}" Command="{Binding $parent[TextBox].Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}" InputGesture="{x:Static TextBox.PasteGesture}"/>
    </MenuFlyout>

    <ContextMenu x:Key="DefaultTextBoxContextMenu" x:Name="TextBoxContextMenu">
        <MenuItem x:Name="TextBoxContextMenuCutItem" Header="{x:Static localization:ControlsResources.ContextMenu_Cut}" Command="{Binding $parent[TextBox].Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}" InputGesture="{x:Static TextBox.CutGesture}" />
        <MenuItem x:Name="TextBoxContextMenuCopyItem" Header="{x:Static localization:ControlsResources.ContextMenu_Copy}" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}"/>
        <MenuItem x:Name="TextBoxContextMenuPasteItem" Header="{x:Static localization:ControlsResources.ContextMenu_Paste}" Command="{Binding $parent[TextBox].Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}" InputGesture="{x:Static TextBox.PasteGesture}"/>
    </ContextMenu>

    <Template x:Key="DefaultTextBoxPopupMenu" >
        <mxb:PopupMenu Focusable="False">
            <mxb:ToolbarButtonItem x:Name="TextBoxToolbarMenuCutItem" Header="{x:Static localization:ControlsResources.ContextMenu_Cut}" HotKeyDisplayString="Ctrl+X" Command="{Binding $parent[TextBox].Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}"
                                                         Glyph="{x:Static icons:Basic.Cut}"/>
            <mxb:ToolbarButtonItem x:Name="TextBoxToolbarMenuCopyItem" Header="{x:Static localization:ControlsResources.ContextMenu_Copy}" HotKeyDisplayString="Ctrl+C" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}"
                                                         Glyph="{x:Static icons:Basic.Copy}"/>
            <mxb:ToolbarButtonItem x:Name="TextBoxToolbarMenuPasteItem" Header="{x:Static localization:ControlsResources.ContextMenu_Paste}" HotKeyDisplayString="Ctrl+V" Command="{Binding $parent[TextBox].Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}"
                                                         Glyph="{x:Static icons:Basic.Paste}"/>
        </mxb:PopupMenu>
    </Template>

    <ControlTheme x:Key="{x:Type TextBox}" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaretBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource EditorBorderThickness}" />
        <Setter Property="CornerRadius" Value="{StaticResource EditorCornerRadius}" />
        <Setter Property="MinHeight" Value="{StaticResource EditorMinHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource EditorMinWidth}" />
        <Setter Property="Padding" Value="{StaticResource TextEditorPadding}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="ContextFlyout" Value="{x:Null}" />
        <Setter Property="mxb:ToolbarManager.ContextPopup" Value="{StaticResource DefaultTextBoxPopupMenu}"/>
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Panel>
                        <Border Name="PART_BorderElement"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}">
                        </Border>

                        <Border Margin="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid ColumnDefinitions="Auto,*,Auto" >
                                <ContentPresenter Grid.Column="0" Grid.ColumnSpan="1" Content="{TemplateBinding InnerLeftContent}"/>
                                <DockPanel x:Name="PART_InnerDockPanel" Grid.Column="1" Grid.ColumnSpan="1" Margin="{TemplateBinding Padding}">
                                    <TextBlock Name="PART_FloatingWatermark"
                                               Text="{TemplateBinding Watermark}"
                                               DockPanel.Dock="Top" />
                                    <Grid ColumnDefinitions="Auto, *" Name="PART_ContentPanel"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                        <Image Source="{x:Static icons:Basic.Error}"
                                               x:Name="PART_ErrorIndicator"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                                      VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                                      Grid.Column="1">
                                            <Panel>
                                                <TextBlock Name="PART_Watermark"
                                                           Text="{TemplateBinding Watermark}"
                                                           TextAlignment="{TemplateBinding TextAlignment}"
                                                           TextWrapping="{TemplateBinding TextWrapping}"
                                                           IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <TextPresenter Name="PART_TextPresenter"
                                                               Text="{TemplateBinding Text, Mode=TwoWay}"
                                                               CaretIndex="{TemplateBinding CaretIndex}"
                                                               SelectionStart="{TemplateBinding SelectionStart}"
                                                               SelectionEnd="{TemplateBinding SelectionEnd}"
                                                               TextAlignment="{TemplateBinding TextAlignment}"
                                                               TextWrapping="{TemplateBinding TextWrapping}"
                                                               PasswordChar="{TemplateBinding PasswordChar}"
                                                               RevealPassword="{TemplateBinding RevealPassword}"
                                                               SelectionBrush="{TemplateBinding SelectionBrush}"
                                                               SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                               CaretBrush="{TemplateBinding CaretBrush}"
                                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Panel>
                                        </ScrollViewer>
                                    </Grid>
                                </DockPanel>
                                <ContentPresenter x:Name="PART_ReadOnlyContentContainer"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  CornerRadius="{TemplateBinding CornerRadius}">
                                    <ContentPresenter.Styles>
                                        <Style Selector="TextBlock">
                                            <Setter Property="mxc:TextBlockHelper.ShowTooltipWhenTrimming" Value="True"/>
                                        </Style>
                                    </ContentPresenter.Styles>
                                </ContentPresenter>
                                <ContentPresenter Grid.Column="2" Grid.ColumnSpan="1" Content="{TemplateBinding InnerRightContent}"/>
                            </Grid>
                        </Border>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ TextBlock#PART_Watermark,
               ^ /template/ TextBlock#PART_FloatingWatermark">
            <Setter Property="Foreground" Value="{DynamicResource TextBoxWatermarkBrush}" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_ReadOnlyContentContainer">
            <Setter Property="IsVisible" Value="False" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <Style Selector="^.secondary">
            <Setter Property="Background" Value="{DynamicResource TextBoxSecondaryBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxSecondaryBorderBrush}"/>
        </Style>

        <!-- Disabled State -->
        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundDisabled}" />

            <Style Selector="^ /template/ Border#PART_BorderElement">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TransparentBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_Watermark,
                   ^ /template/ TextBlock#PART_FloatingWatermark">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxWatermarkBrushDisabled}" />
            </Style>
            <Style Selector="^.secondary /template/ Border#PART_BorderElement">
                <Setter Property="Background" Value="{DynamicResource TextBoxSecondaryBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxSecondaryBorderBrushDisabled}"/>
            </Style>
        </Style>

        <!-- PointerOver State-->
        <Style Selector="^:pointerover">
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundPointerOver}" />

            <Style Selector="^ /template/ Border#PART_BorderElement">
                <Setter Property="BorderBrush" Value="{DynamicResource TransparentBrush}"/>
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundPointerOver}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_Watermark, 
                   ^ /template/ TextBlock#PART_FloatingWatermark">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxWatermarkBrush}" />
            </Style>
            <Style Selector="^.secondary /template/ Border#PART_BorderElement">
                <Setter Property="Background" Value="{DynamicResource TextBoxSecondaryBackgroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxSecondaryBorderBrushPointerOver}"/>
            </Style>
        </Style>

        <!-- Focused State -->
        <Style Selector="^:focus">
            <Setter Property="Foreground" Value="{DynamicResource TextBoxFocusForeground}" />

            <Style Selector="^ /template/ TextBlock#PART_Watermark,
                   ^ /template/ TextBlock#PART_FloatingWatermark">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxWatermarkBrush}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_BorderElement">
                <Setter Property="Background" Value="{DynamicResource TextBoxFocusBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{StaticResource EditorBorderThickness}" />
            </Style>
            <Style Selector="^.secondary /template/ Border#PART_BorderElement">
                <Setter Property="Background" Value="{DynamicResource TextBoxSecondaryFocusBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{StaticResource EditorBorderThickness}" />
            </Style>
        </Style>

        <Style Selector="^:error /template/ Border#PART_BorderElement">
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxErrorBorderBrush}"/>
        </Style>

        <Style Selector="^ /template/ DockPanel#PART_InnerDockPanel[IsVisible=True]">
            <Setter Property="Cursor" Value="IBeam" />
        </Style>

        <Style Selector="^ /template/ TextBlock#PART_FloatingWatermark">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^ /template/ Image#PART_ErrorIndicator">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^[UseFloatingWatermark=true]:not(^:empty) /template/ TextBlock#PART_FloatingWatermark">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^.revealPasswordButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
            <Setter Property="InnerRightContent">
                <Template>
                    <ToggleButton Theme="{StaticResource TexBoxPasswordRevealButtonTheme}"
                                  IsChecked="{CompiledBinding $parent[TextBox].RevealPassword, Mode=TwoWay}" />
                </Template>
            </Setter>
        </Style>

        <Style Selector="^.clearButton[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
            <Setter Property="InnerRightContent">
                <Template>
                    <Button Theme="{StaticResource TextBoxClearButtonTheme}"
                            Command="{Binding $parent[TextBox].Clear}" />
                </Template>
            </Setter>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="TextBoxButtonBaseTheme" TargetType="Button">
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Width" Value="{Binding $self.Bounds.Height}"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Style Selector="^ /template/ Border#PART_ButtonLayoutBorder">
            <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TransparentBrush}" />
        </Style>
        <Style Selector="^:disabled /template/ Border#PART_ButtonLayoutBorder">
            <Setter Property="Opacity" Value="0" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="TextBoxClearButtonTheme" TargetType="Button" BasedOn="{StaticResource TextBoxButtonBaseTheme}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="PART_ButtonLayoutBorder"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="PART_GlyphElement"
                              Data="{StaticResource TextBoxClearButtonData}"
                              Height="8"
                              Width="8"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style Selector="^ /template/ Path#PART_GlyphElement">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForeground}" />
        </Style>

        <Style Selector="^:pointerover /template/ Path#PART_GlyphElement">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForegroundPointerOver}" />
        </Style>

        <Style Selector="^:pressed /template/ Path#PART_GlyphElement">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForegroundPressed}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="TexBoxPasswordRevealButtonTheme" TargetType="ToggleButton" BasedOn="{StaticResource TextBoxButtonBaseTheme}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="PART_ButtonLayoutBorder"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Panel>
                            <Path x:Name="PART_GlyphElement_Reveal"
                                  Data="{StaticResource PasswordBoxRevealButtonData}"
                                  Height="8"
                                  Width="12"
                                  Stretch="Uniform"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />
                            <Path x:Name="PART_GlyphElement_Hide"
                                  Data="{StaticResource PasswordBoxHideButtonData}"
                                  Height="12"
                                  Width="12"
                                  Stretch="Uniform"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />
                        </Panel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style Selector="^ /template/ Path#PART_GlyphElement_Reveal,
                   ^ /template/ Path#PART_GlyphElement_Hide">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForeground}" />
        </Style>
        <Style Selector="^:pointerover /template/ Path#PART_GlyphElement_Reveal,
                   ^:pointerover /template/ Path#PART_GlyphElement_Hide">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForegroundPointerOver}" />
        </Style>
        <Style Selector="^:pressed /template/ Path#PART_GlyphElement_Reveal,
                   ^:checked /template/ Path#PART_GlyphElement_Hide,
                   ^:indeterminate /template/ Path#PART_GlyphElement_Reveal">
            <Setter Property="Fill" Value="{DynamicResource TextBoxTextAreaButtonForegroundPressed}" />
        </Style>
        <Style Selector="^:not(:checked) /template/ Path#PART_GlyphElement_Hide">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="^:checked /template/ Path#PART_GlyphElement_Reveal">
            <Setter Property="IsVisible" Value="False" />
        </Style>
    </ControlTheme>

</ResourceDictionary>