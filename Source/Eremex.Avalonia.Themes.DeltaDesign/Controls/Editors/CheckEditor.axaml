<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mxe="clr-namespace:Eremex.AvaloniaUI.Controls.Editors;assembly=Eremex.Avalonia.Controls"
                    xmlns:utils="clr-namespace:Eremex.AvaloniaUI.Controls.Utils;assembly=Eremex.Avalonia.Controls">

    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel>
                <Border Background="{DynamicResource Fill/Neutral/Primary/Enabled}" Padding="10">
                    <StackPanel Spacing="10">
                        <mxe:CheckEditor Content="Check Editor" IsChecked="True" Width="180"/>
                        <mxe:CheckEditor Content="Warning" IsChecked="True" Width="180" Classes="warning"/>
                        <mxe:CheckEditor Content="Inactive Editor" EditorMode="InplaceInactive" Width="180"/>
                        <mxe:CheckEditor Content="Inactive warning" EditorMode="InplaceInactive" Width="180" Classes="warning"/>
                        <mxe:CheckEditor Content="Disabled" EditorMode="Standalone" IsEnabled="False" Width="180"/>
                    </StackPanel>
                </Border>
                <Border Background="{DynamicResource Fill/Neutral/Secondary/Enabled}" Padding="10">
                    <StackPanel Spacing="10">
                        <mxe:CheckEditor Content="Secondary Editor" IsChecked="True" Width="180" Classes="secondary"/>
                        <mxe:CheckEditor Content="Secondary Warning" IsChecked="True" Width="180" Classes="secondary warning"/>
                        <mxe:CheckEditor Content="Inactive Editor" EditorMode="InplaceInactive" Width="180" Classes="secondary"/>
                        <mxe:CheckEditor Content="Inactive warning" EditorMode="InplaceInactive" Width="180" Classes="secondary warning"/>
                        <mxe:CheckEditor Content="Secondary Disabled" IsEnabled="False" Width="180" Classes="secondary"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type mxe:CheckEditor}" TargetType="mxe:CheckEditor" BasedOn="{StaticResource {x:Type mxe:BaseEditor}}">
        <Setter Property="Padding" Value="{StaticResource CheckBoxPadding}" />
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel Name="PART_InactiveContentContainer" Margin="{StaticResource CheckEditorPadding}">
                    <Image x:Name="PART_RealEditorPresenter" Stretch="None" Margin="{StaticResource CheckEditorImageMargin}"/>
                </DockPanel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[ActualErrorShowMode=Inplace][IsEnabled=true]">
            <Setter Property="Foreground" Value="{DynamicResource EditorForegroundOnError}"/>
        </Style>

        <Style Selector="^:activeMode">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Template">
                <ControlTemplate>
                    <DockPanel>
                        <TextBlock x:Name="PART_ErrorTextPresenter"
                                   DockPanel.Dock="Bottom"
                                   Text="{TemplateBinding ErrorText}"
                                   FontSize="{DynamicResource EditorErrorFontSize}"
                                   Foreground="{DynamicResource TextEditorErrorTextForeground}"
                                   Margin="{StaticResource ErrorTextPresenterMargin}"
                                   TextWrapping="Wrap"/>
                        <Panel x:Name="PART_RealEditorPanel">
                            <Grid Name="PART_RootContainer"
                                Background="{TemplateBinding Background}">
                                <CheckBox Grid.Column="1" Name="PART_RealEditor"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          IsThreeState="{TemplateBinding IsThreeState}"
                                          Foreground="{TemplateBinding Foreground}"
                                          CornerRadius="{TemplateBinding CornerRadius}"
                                          BorderBrush="Transparent"
                                          Focusable="{TemplateBinding Focusable}"
                                          Command="{TemplateBinding Command}"
                                          CommandParameter="{TemplateBinding CommandParameter}"
                                          BorderThickness="0"
                                          Theme="{StaticResource CheckEditorCheckerTheme}"
                                          MinHeight="0"
                                          Classes.secondary="{TemplateBinding SecondaryAppearance}"
                                          IsEnabled="{Binding !ReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <Border Name="PART_RootBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Background="{x:Null}"
                                    MinHeight="0"/>
                        </Panel>
                    </DockPanel>
                </ControlTemplate>
            </Setter>
            <Style Selector="^ /template/ TextBlock#PART_ErrorTextPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^[ActualErrorShowMode=Full] /template/ Border#PART_RootBorder">
                <Setter Property="BorderBrush" Value="{DynamicResource TextEditorFullErrorBorderBrush}"/>
            </Style>
            <Style Selector="^[ActualErrorShowMode=Full] /template/ TextBlock#PART_ErrorTextPresenter">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^[ActualErrorShowMode=Full] /template/ Panel#PART_RealEditorPanel">
                <Setter Property="MinHeight" Value="{Binding $parent[mxe:BaseEditor].MinHeight}" />
            </Style>
            <Style Selector="^[ActualErrorShowMode=Inplace][IsEnabled=true] /template/ CheckBox#PART_RealEditor">
                <Setter Property="Theme" Value="{StaticResource CheckEditorCheckerErrorTheme}"/>
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="CheckEditorCheckerTheme" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Panel Background="Transparent">
                        <Grid x:Name="RootGrid" ColumnDefinitions="Auto,*">
                            <Border x:Name="PART_Border"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                            <Grid x:Name="PART_CheckContainer" VerticalAlignment="Center"
                                  IsVisible="{Binding $parent[mxe:CheckEditor].ActualStateGlyph, Converter={x:Static ObjectConverters.IsNull}}">
                                <Border x:Name="FocusRectangle"
                                        BorderThickness="{StaticResource FocusAdornerBorderThickness}"
                                        Padding="{StaticResource FocusAdornerBorderThickness}"
                                        CornerRadius="{StaticResource CheckEditorGlyphCornerRadius}">
                                    <Border x:Name="NormalRectangle"
                                            UseLayoutRounding="False"
                                            Height="16"
                                            Width="16" />
                                </Border>
                                <Path x:Name="CheckGlyph" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                            <Image x:Name="PART_StateIndicator" VerticalAlignment="Center" Margin="{StaticResource CheckEditorImageMargin}"
                                   Source="{Binding $parent[mxe:CheckEditor].ActualStateGlyph}"
                                   IsVisible="{Binding $self.Source, Converter={x:Static ObjectConverters.IsNotNull}}"
                                   Stretch="None"/>
                            <ContentPresenter x:Name="ContentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Column="1" />
                        </Grid>
                    </Panel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="CheckEditorCheckerErrorTheme" TargetType="CheckBox" BasedOn="{StaticResource CheckEditorCheckerTheme}">
        <Style Selector="^ /template/ ContentPresenter#ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource EditorForegroundOnError}"/>
        </Style>
        <Style Selector="^.warning:pointerover /template/ ContentPresenter#ContentPresenter,
               ^.warning:focus /template/ ContentPresenter#ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource EditorForegroundOnError}"/>
        </Style>
    </ControlTheme>
</ResourceDictionary>
