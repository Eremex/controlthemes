<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:mxe="clr-namespace:Eremex.AvaloniaUI.Controls.Editors;assembly=Eremex.Avalonia.Controls"
				xmlns:mxev="clr-namespace:Eremex.AvaloniaUI.Controls.Editors.Visuals;assembly=Eremex.Avalonia.Controls"	
        xmlns:utils="clr-namespace:Eremex.AvaloniaUI.Controls.Utils;assembly=Eremex.Avalonia.Controls"
				xmlns:mxc="clr-namespace:Eremex.AvaloniaUI.Controls.Common;assembly=Eremex.Avalonia.Controls">

	<Styles.Resources>
		<ResourceDictionary>
			<SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
		</ResourceDictionary>
	</Styles.Resources>
		
    <Style Selector=":is(mxe|BaseEditor)">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource EditorFontSize}" />
        <Setter Property="MinHeight" Value="{StaticResource EditorMinHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource EditorMinWidth}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="{StaticResource TextEditorPadding}" />
    </Style>

	<Style Selector=":is(mxe|BaseEditor):activeMode">
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource Text/Neutral/Primary}" />
		<Setter Property="CornerRadius" Value="{StaticResource EditorCornerRadius}" />
		<Setter Property="BorderThickness" Value="{StaticResource EditorBorderThickness}" />
	</Style>
	
    <Style Selector=":is(mxe|ButtonEditor), mxe|TextEditor">
        <Setter Property="Template">
            <ControlTemplate>
							<mxev:EditorInactiveContainer Name="PART_InactiveContentContainer" ColumnDefinitions="Auto, *, Auto" >
									<TextBlock DockPanel.Dock="Left"
														 Grid.Column="1"
														 Name="PART_RealEditorPresenter"
														 TextTrimming="CharacterEllipsis"
														 mxc:TextBlockHelper.ShowTooltipWhenTrimming="True"/>
							</mxev:EditorInactiveContainer>
            </ControlTemplate>
        </Setter>
    </Style>

    <Style Selector=":is(mxe|ButtonEditor):activeMode, mxe|TextEditor:activeMode">
			<Setter Property="Background" Value="{DynamicResource Fill/Neutral/Secondary/Enabled}"/>
    </Style>
    <Style Selector=":is(mxe|ButtonEditor):activeMode, mxe|TextEditor:activeMode, mxe|CheckEditor:activeMode">
      <Setter Property="Focusable" Value="True"/>
    </Style>
    <Style Selector=":is(mxe|ButtonEditor)[EditorMode=Standalone], mxe|TextEditor[EditorMode=Standalone], mxe|SegmentedEditor[EditorMode=Standalone]">
			<Setter Property="BorderBrush" Value="{DynamicResource Outline/Neutral/Transparent/Light}"/>
    </Style>
	<Style Selector="mxe|ButtonEditor.secondary:activeMode, mxe|ComboBoxEditor.secondary:activeMode, mxe|PopupColorEditor.secondary:activeMode,
           mxe|PopupEditor.secondary:activeMode, mxe|SpinEditor.secondary:activeMode, mxe|TextEditor.secondary:activeMode, mxe|DateEditor.secondary:activeMode, mxe|MemoEditor.secondary:activeMode">
		<Setter Property="Background" Value="{DynamicResource Fill/Neutral/Primary/Enabled}"/>
	</Style>
	<Style Selector=":is(mxe|ButtonEditor):activeMode, mxe|TextEditor:activeMode">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
	</Style>

	<Style Selector=":is(mxe|TextEditor)[ActualErrorShowMode=Inplace][IsEnabled=true]:activeMode /template/ TextBox#PART_RealEditor /template/ TextPresenter#PART_TextPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Text/Accent/Error}"/>
		<Setter Property="SelectionForegroundBrush" Value="{DynamicResource Text/Neutral/Primary}"/>
	</Style>
	<Style Selector=":is(mxe|TextEditor)[ActualErrorShowMode=Inplace][IsEnabled=true]:activeMode /template/ TextBox#PART_RealEditor /template/ ContentPresenter#PART_ReadOnlyContentContainer">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Text/Accent/Error}"/>
	</Style>
	<Style Selector=":is(mxe|CheckEditor)[ActualErrorShowMode=Inplace][IsEnabled=true]:activeMode /template/ CheckBox#PART_RealEditor /template/ ContentPresenter#ContentPresenter, 
					 :is(mxe|CheckEditor)[ActualErrorShowMode=Inplace][IsEnabled=true]:not(:activeMode ) /template/ CheckBox#PART_RealEditorPresenter /template/ ContentPresenter#ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Text/Accent/Error}"/>
	</Style>
	<Style Selector=":is(mxe|TextEditor)[EditorMode=InplaceInactive][ActualErrorShowMode=Inplace][IsEnabled=true] /template/ TextBlock#PART_RealEditorPresenter">
		<Setter Property="Foreground" Value="{DynamicResource Text/Accent/Error}"/>
	</Style>
	<Style Selector=":is(mxe|ComboBoxEditor)[EditorMode=InplaceInactive][ActualErrorShowMode=Inplace][IsEnabled=true] /template/ mxev|EditorInactiveContainer#PART_InactiveContentContainer">
		<Setter Property="TextElement.Foreground" Value="{DynamicResource Text/Accent/Error}"/>
	</Style>
	<Style Selector=":is(mxe|TextEditor) /template/ TextBlock#PART_ErrorTextPresenter,
					 :is(mxe|CheckEditor) /template/ TextBlock#PART_ErrorTextPresenter">
		<Setter Property="IsVisible" Value="False" />
	</Style>
	<Style Selector=":is(mxe|TextEditor)[EditorMode=InplaceActive]:readOnly /template/ TextBox#PART_RealEditor">
		<Setter Property="Foreground" Value="{DynamicResource Text/Neutral/Disabled}" />
	</Style>
</Styles>