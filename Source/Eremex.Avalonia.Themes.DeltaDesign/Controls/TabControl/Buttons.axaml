<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:internal="clr-namespace:Eremex.AvaloniaUI.Controls.Internal;assembly=Eremex.Avalonia.Controls"
        xmlns:other="clr-namespace:Eremex.AvaloniaUI.Icons.Other;assembly=Eremex.Avalonia.Icons"
        xmlns:avaConv="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls"
        xmlns:localization="clr-namespace:Eremex.AvaloniaUI.Controls.Localization;assembly=Eremex.Avalonia.Controls">
    
    <ControlTheme x:Key="TabControlButtonTheme" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="{DynamicResource TabControlButtonSize}" />
        <Setter Property="Width" Value="{DynamicResource TabControlButtonSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="4"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        
        <Style Selector="^.OnSecondary:pointerover">
		    <Setter Property="BorderThickness" Value="1"></Setter>
	    </Style>
	    
	    <Style Selector="^.OnSecondary:pressed">
		    <Setter Property="BorderThickness" Value="1"></Setter>
	    </Style>

	    <Style Selector="^:pointerover /template/ Border#PART_BackgroundBorder">
		    <Setter Property="Background" Value="Transparent"></Setter>
	    </Style>

        <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource Fill/Neutral/Secondary/Hover}"></Setter>
	        <Setter Property="Opacity" Value="1"></Setter>
        </Style>
	    
	    <Style Selector="^.OnSecondary:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		    <Setter Property="Background" Value="{DynamicResource Fill/Neutral/Primary/Hover}"></Setter>
	    </Style>
	    
	    <Style Selector="^:pressed /template/ Border#PART_BackgroundBorder">
		    <Setter Property="Background" Value="Transparent"></Setter>
	    </Style>
	    
	    <Style Selector="^:disabled /template/ Border#PART_BackgroundBorder">
		    <Setter Property="Background" Value="Transparent"></Setter>
	    </Style>
	    
        <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource Fill/Neutral/Secondary/Pressed}"></Setter>
	        <Setter Property="Opacity" Value="1"></Setter>
        </Style>
	    
	    <Style Selector="^.OnSecondary:pressed /template/ ContentPresenter#PART_ContentPresenter">
		    <Setter Property="Background" Value="{DynamicResource Fill/Neutral/Primary/Pressed}"></Setter>
	    </Style>
	    
	    <Style Selector="^.OnSecondary:pointerover /template/ Border#PART_ButtonBorder">
		    <Setter Property="BorderBrush" Value="{DynamicResource Outline/Neutral/Transparent/Light}"></Setter>
	    </Style>
	    
	    <Style Selector="^.OnSecondary:pressed /template/ Border#PART_ButtonBorder">
		    <Setter Property="BorderBrush" Value="{DynamicResource Outline/Neutral/Transparent/Light}"></Setter>
	    </Style>
    </ControlTheme>
    
    <ControlTheme x:Key="TabItemButtonTheme" TargetType="Button" BasedOn="{StaticResource TabControlButtonTheme}">
        <Setter Property="Height" Value="{DynamicResource TabItemButtonSize}" />
        <Setter Property="Width" Value="{DynamicResource TabItemButtonSize}" />
        <Setter Property="IsVisible" Value="{Binding $self.IsEffectivelyEnabled}"></Setter>        
    </ControlTheme>
	
	<ControlTheme x:Key="{x:Type internal:TabControlControlBox}" TargetType="internal:TabControlControlBox">
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <Button Classes="TabControlButton"
                            IsVisible="{TemplateBinding IsNewButtonVisible}"
                            Command="{TemplateBinding NewCommand}"
                            CommandParameter="{TemplateBinding NewCommandParameter}"
                            x:Name="PART_NewButton"
                            Theme="{StaticResource TabControlButtonTheme}"
                            ToolTip.Tip="{x:Static localization:ControlsResources.TabControl_NewTabButton}">
	                    <Image Height="12"
	                           Width="12"
	                           Source="{x:Static other:_12.Add}"/>
                    </Button>
                    <Button Classes="TabControlButton"
                            IsVisible="{TemplateBinding IsCloseButtonVisible}"
                            Command="{TemplateBinding CloseCommand}"
                            CommandParameter="{TemplateBinding CloseCommandParameter}"
                            x:Name="PART_CloseButton"
                            Theme="{StaticResource TabControlButtonTheme}"
                            ToolTip.Tip="{x:Static localization:ControlsResources.TabControl_CloseTabButton}">
                        <Image Height="12"
                               Width="12"
                               Source="{x:Static other:_12.Close}"/>
                    </Button>
                    <ContentPresenter Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:horizontal /template/ Button#PART_CloseButton">
            <Setter Property="DockPanel.Dock" Value="Right"></Setter>
        </Style>
        <Style Selector="^:vertical /template/ Button#PART_NewButton">
            <Setter Property="DockPanel.Dock" Value="Top"></Setter>
        </Style>
        <Style Selector="^:vertical /template/ Button#PART_CloseButton">
            <Setter Property="DockPanel.Dock" Value="Bottom"></Setter>
        </Style>
    </ControlTheme>
    
    <ControlTheme x:Key="TabControlScrollButtonTheme" TargetType="RepeatButton" BasedOn="{StaticResource TabControlButtonTheme}">
        <!--Scroll buttons horizontal-->
        <Style Selector="^.Horizontal.Prev">
            <Setter Property="DockPanel.Dock" Value="Left"></Setter>
            <Setter Property="Command" Value="{Binding LineLeft, RelativeSource={RelativeSource TemplatedParent}}">
            </Setter>
            <Setter Property="IsVisible">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static avaConv:MenuScrollingVisibilityConverter.Instance}"
                                  ConverterParameter="0">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="HorizontalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Offset.X" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Extent.Width" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Viewport.Width" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="^.Horizontal.Next">
            <Setter Property="DockPanel.Dock" Value="Right"></Setter>
            <Setter Property="Command" Value="{Binding LineRight, RelativeSource={RelativeSource TemplatedParent}}">
            </Setter>
            <Setter Property="IsVisible">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static avaConv:MenuScrollingVisibilityConverter.Instance}"
                                  ConverterParameter="100">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="HorizontalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Offset.X" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Extent.Width" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Viewport.Width" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Scroll buttons vertical-->
        <Style Selector="^.Vertical.Prev">
            <Setter Property="DockPanel.Dock" Value="Top"></Setter>
            <Setter Property="Command" Value="{Binding LineUp, RelativeSource={RelativeSource TemplatedParent}}">
            </Setter>
            <Setter Property="IsVisible">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static avaConv:MenuScrollingVisibilityConverter.Instance}"
                                  ConverterParameter="0">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="VerticalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Offset.Y" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Extent.Height" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Viewport.Height" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="^.Vertical.Next">
            <Setter Property="DockPanel.Dock" Value="Bottom"></Setter>
            <Setter Property="Command" Value="{Binding LineDown, RelativeSource={RelativeSource TemplatedParent}}">
            </Setter>
            <Setter Property="IsVisible">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static avaConv:MenuScrollingVisibilityConverter.Instance}"
                                  ConverterParameter="100">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="VerticalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Offset.Y" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Extent.Height" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                 Path="Viewport.Height" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style Selector="^:not(.Vertical):not(.Horizontal)">
            <Setter Property="IsVisible" Value="False"></Setter>
        </Style>
    </ControlTheme>
</ResourceDictionary>